플레이어
->움직이기만 하면 될듯 input값이 0이면 anim.idle 아니면 anim.move
->hp<=0 이면 모든 활동 중단(무기 생성, 데미지, 적 움직임 등등)
->카메라가 계속 따라가야함
camera
	gameobj.transfrom.pos = player.transfrom.pos

추가
->무기 생성 포인트가 바로 플레이어가 되야함 player.transfrom.pos를 무기 시작 transfrom.pos 로 고정
->무기(총알)이 원하는 타겟 값 계산해서 넘겨줘야함
gameobj.findobjtag("enemy") => 리스트화(가장 가까운 값 뽑으려면??) vec3.distance 사용해보기
->총알 스폰 조건 달기(각 무기마다 조건 다름)

-----------------------------------
배경
->넓~~~~~~~~~~게 만든다?(끝까지 가면 한계 있음)=>충돌처리해서 충돌 끝나면 어디론가 움직이게 하면될듯
collider
	if(tag = "?")
		tile.transfrom.pos = 어디론가
새로 옮길 위치 계산은?? 현 위치에 일정값을 계산하여 옮기기
추가로 옮길 방향도 필요할듯(player.inputvec ?)

if(x입력값=음수)
	좌측 움직임
	if(y입력값=음수)
		아래 움직임
	elseif(y입력값=양수)
		위 움직임
elseif(x입력값=양수)
	우측 움직임
	if(y입력값=음수)
		아래 움직임
	elseif(y입력값=양수)
		위 움직임

개선사항
->방향 문제 => player만으로 계산하면 안됨 추가적인 요소 필요 => player.pos - tile.pos 해서 방향 조절? => 해결
->위치 문제 => 꼭지점으로 이동하여 충돌이 끝나면 맵이 이상한 곳으로 이동함 => diif값이 같을 경우 동시에 움직이도록 함 => 충돌 범위 늘려서 조절 => 현재 문제 없음

--------------------------------------------------------------------------
적
->타겟(findobjtag("player").transfrom 으로 받으면 될 듯)
->움직임(movetoward 쓰기)
->데미지 주기(collision 발생 시)
->데미지 입기(collision 발생 시)
->프리펩 한바퀴 돌면 스탯 증가(gamecontroller 에서 값 받아서 적 스탯에 일정하게 더하면 될듯)
->죽으면 아이템 떨구기 => 근데 이거 태그 없애야 할 듯 플레이어가 자꾸 얘로 타겟 고정함
hp<=0 - tag 변경 - anim 변경(dead) - 몇 초 뒤 삭제 후 아이템 떨구기
->아이템 떨구기 확률 or 적 캐릭터별 고정값 => 확률이 랜덤성 있어서 더 짜릿할듯

->생성은??

개선사항
->생성 - 플레이어 주변에서 생성 되야 됨(고정값이면 안됨...) - 전에 똥뿌리기게임처럼 해야할듯
spawn.transfrom = random.range(point).transfrom?
->데미지 입으면 밀려나기 => 우선 vec2.zero 써서 자리에 잠시 멈추는 걸로 구현
->데미지 주기 => 충돌하고 데미지 한 번 주면 끝임 계속 비벼도 데미지 못 주고 있음 => 해결
colliderenter - bool true - 1초마다 damage
colliderexit - bool false

---------------------------------------------------------------------
스폰
->적 생성 위치(플레이어 아래에 빈 게임오브젝트에 포인트 넣기 - 스폰 포인트가 플레이어 위치에 따라 계속 변하게)
->적 프리펩 받아오기
list(prefab)으로 prefab 데이터 받아오고 그걸 다른 리스트에 넣어야할듯

for(i=0; i<prefab.length)
	list.prefab => enemy.add

추가
-무기, 아이템도 생성해야함(대신에 얘네 transform.pos 는 spawn 불려오는 타이밍의 플레이어, 적 위치 기준)

개선사항
->무기, 적, 아이템 다 따로 하고 있는데 통합 필요 => prefab 리스트 각각 만들어 관리 => string 값 받아서 각각 소환 => 해결


----------------------------------------------------------------------------------
아이템(일단 경험치만)
-아이템이 플레이어랑 충돌하면 아이템만큼 플레이어에게 +@
-충돌 comparetag == "player"

추가
-아이템과 collider가 아닌 플레이어 근처에 왔을 때 아이템이 흡수되도록하려면?
-자석아이템추가 -> 거리 계산 필수(vec2.distance)

개선사항
-기존 collider 발생 시 삭제 => 삭제
-거리 계산해서 일정 거리 안에 들어오면 능력치 증가하도록 => 폐기 및 응용
player.distance - obj.distance

추가
-거리 계산해서 일정 거리 안에 들어오면 땅겨지는 모션 필요 =>해결
-player 에서 충돌처리, collider tag = item이면 충돌 된 itemobj 삭제

개선사항
-간간히 enemydata의 exp 값이 gamecontroller curexp로 안 넘어가는 문제 발생 => exp 값을 enemy가 갖도록 안함, 각 exp 프리펩이 고유의 값을 갖도록 함
=> 생성은 그래서 동,은,금 각자 랜덤 확률에 의해 나오도록 함
-경험치 수급량이 현저히 줄어 레벨업까지의 요구량 조정 필요할듯 => 기존 요구량 *= 2 에서 기존 요구량 += 고정값(100)으로 변경

-----------------------------------------------------------------------------------
무기(총알)
->타겟 (태그로 적 고정)
->가장 가까운 타겟(타겟 리스트 해서 검사?) => 리스트로 만들어서 거리 순 정렬
->발사(플레이어 시야 각 내에 발사하는게 보기 좋을 듯)
->발사 방향(타겟 잡은 대상으로 돌린 후 발사) => 총알-타겟 포지션 값 얻고 mathf.atan 사용해서 값 받음 => 받은 값 어디?(rotatation)
->총알 이동
->충돌 시 enemy.damage(damage) 소환,  총알 오브젝트 삭제

개선사항
총알 이동 방향 문제(타겟 반대방향으로 감) => vec2.up 쓰면 바라보는 방향으로 가나? => 해결

-----------------------------------------------------------------------------------------------------
플레이어 레벨업
-> 에너미, 플레이어, 아이템, 불렛 정지 (GameController에 bool 함수 추가로 조정) time.scale(0)
-> 레벨업 UI 활성 (?) .setactive => 한 캔버스, 스크립트 내에서
-> 레벨업 선택 (? => random => onButtonClick) => 만약 남은 레벨업 데이터가 3개가 안된다면?
-> 선택 데이터 반영(저장된 정보(Dictionary or List) + Switch문) => Dictionary만 있어도 충분할 듯
-> 레벨업 UI 비활성 (?)
-> 에너미, 플레이어, 아이템, 불렛 활성 (GameController에 bool 함수 추가로 조정) time.scale(1)

레벨업 UI
-> 3가지 선택지
-> 들어가야할 데이터?? dictionary?? Random switch??

UI예상도 => 구현

레벨업!!
[이미지] 이동속도 증가 (현재 플레이어 스탯 => 적용 스탯)
[이미지] 0초간 적 이동속도 감소(감소 퍼센트)
[이미지] 무기 데미지 or 무기 탄환 개수 or 발사 딜레이 감소 (현재 레벨/최대 레벨)

레벨업 요소(현재 구현된 요소만)
player : speed, Hp 증가
item : 획득 범위 증가
weapon : damage, delaytime 증가

Gamecontroller(int weapon1_lv = 1, weapon2_lv = 2...)
-> Dictionary<index, name>
-> random.range(0, dic.length)
-> for(int i=0,i<3;i++) {UIcontroller.SetButtonData(i, dic.name)}(?)
-> 랜덤값 중복 방지 리스트[3]으로 값 들어갔는지 확인
-> UIcontroller(Image, Data) (?)
	UIcontroller.LevelupUI(index or name)
	switch(index)
		case 0
		if(0번 무기가 비활성화 중이면)
		Image
		text = {name} 무기를 획득합니다
		else		
        		upgradeImage_1.sprite = List[index].sprite;
		text = {name}의 데미지 {gamecontroller.ins.weapon1_lv값} 증가, 발사 지연 시간 {time}감소
		case 4		
        		upgradeImage_1.sprite = List[index].sprite;
		text = 현재 체력을 최대 체력의 10% 회복하고 최대 체력을 {gamecontroller.ins.hp}만큼 증가합니다
-> UIcontroller(buttonClick(int index or string name))(?)
-> Gamecontroller(weapon1_lv++)
-> weapon1(damage + 5 * gamecontroller.instance.weapon1_lv)

개선사항
1. Image 데이터 변경하는 방법 -> 리스트를 초기 선언 해 미리 이미지 데이터를 다 넣어둔다?
2. 버튼을 눌렀을 때 그 버튼에 할당된 데이터를 보내는 방법 -> onbuttonclick(index)하고 switch~case?
3. 일정 확률로 중복값이 입력되고 있음(UIcontroller.SetlevelupUI() 부분) => 코드 수정 해결 => 이거 오류 생기면?

--------------------------------------------------------------
플레이어 인포 = 퍼즈
-> 키버튼 입력(input.getkeydown (keycode.ESC)) + bool 
-> 에너미, 플레이어, 아이템, 불렛 정지 (GameController에 bool 함수 추가로 조정)
-> 플레이어 인포 UI 활성
-> 키버튼 입력
-> 플레이어 인포 UI 비활성
-> 에너미, 플레이어, 아이템, 불렛 활성 (GameController에 bool 함수 추가로 조정)

UI 예상도

Pause
플레이어 // ooo
체력 110 / 140
속도 3ms
줍기 4m
-----------------------
무기1 ■■■□□□□
무기2 ■■■■■□□
무기3 □□□□□□□
-----------------------
플레이 타임 // 07:31
킬 // 486
-----------------------
press "활성화버튼명" continue

=> 구현
--------------------------------------------------------------
1차 개선해야할 점
1. SpawnEnemy에 현재 있는 아이템 생성 분리
1-1 Spawn을 추상화 가능하다면 enemy, weapon, item 가능? => 해결
2. 게임 시작 때 player의 target이 없어 발생하는 오류 => 해결
3. enemy hit 모션과 함께 뒤로 밀려나는 모습 구현 => 현재 잠시 자리에 멈추는 걸로 구현 => bullet에 빈 게임오브젝트 추가 후 그 게임오브젝트 포지션을 enemy에 넘기는 방식 시도 or Rigidbody2D 추가

추가할 것
1. item (Heal(5% 확률), Magnet(5%확률) (임시))
2. weapon
2-1 플레이어 진행 방향으로만 나가는 무기 (player.inputvec 활용하면 쉬울 듯) => 구현
2-2 플레이어 주변에 랜덤하게 떨어지는 무기 (rand(player.position +- 10) 으로 계산하면 될 듯) => 구현
2-3 무기(2-2)의 fillamount 설정하는 방법, 주변 하얀 원을 타이머 같이 이용하고 싶다. => 현재 한 것에 collider2d 추가하고 시간에 따라 fillamount 조절하면 완료 => 구현
3. 플레이어 다양성(스탯, 첫 무기에서 차이점) => 구현
4. bgm, 상황별 음악 => 구현

-----------------------------------------------------------------------------------
무기(던지기)
->플레이어 이동 방향 따라(GameController player inpuvec 으로 가져 옴)
->받은 값으로 무기 회전(총알 따라 하면 될 듯?) => 해결
->총알 이동
->충돌 시 enemy.damage(damage) 소환, 총알 오브젝트 삭제

버프
->무기가 너무 구림(맞추려면 적 쪽으로 움직이여야 함->하이리스크, 근데 데미지가 그렇게 안 셈)
->폭탄(데미지 제일 세야함), 총알(편의성-유도기능) 사이의 뭔가...
->관통형 무기?? 적 부딪혀도 데미지만 입고 무기는 안 사라짐
->관통형 무기로 만듬, 추후 너무 사기면 데미지 조정하거나 피격 판정을 적 개체 각각 1회로 고정해야할 듯?

-------------------------------------------------------------------------------
무기(폭탄)
->플레이어 현 위치 랜덤하게 생성
->폭탄이 몇 초 뒤 터지게 하고 싶음
->타이머 이미지 넣고 싶음
->폭탄 준비되자마자 터지기(fillamount = 1 일때 충돌 활성화 후 바로 오브젝트 삭제 하면 되나?)

개선사항
->이미지 값이 spirte, 여기엔 fillamount 없는데? => 빈 게임오브젝트 생성 후 이미지 넣어 해결
->collider enable 치자마자 오브젝트 삭제하니 충돌 안함 => 폭탄 collider enable 하고 잠시 후 터지는 걸로 해결

버프
->랜덤하게 생성되고 적 사살에도 시간이 걸림 => 구림
->근데 그렇다고 레벨업 했다고 폭탄이 빨리 터지는 것도 웃김
->데미지 증가, 레벨업 당 데미지 증가로 합의=>지금 폭탄 2렙만 되도 왠만한 애들 원킬, 너무 사기다 싶으면 데미지 조정

---------------------------------------------------------------------
플레이어 선택창
->씬체인저 이용
->dont destroy? 써서 값을 넘겨야 할 듯
->buttonclick에서 값을 받아 game씬의 gamecontroller가 받자
->어떻게 받지?(instance 사용하면 될 듯?)
->받은 정보 설정(gamecontroller 실행되자마자 받은 값으로 하면 될 듯)(switch ~ case?)
->gamecontroller
awake()
{
	switch(string(playerinfo.ins.data))
		case 1
		체력, 스피드, 무기 설정 ...
}

---------------------------------------------------------------------
BGM
->카메라따라? (근데 카메라가 플레이어 따라가는데)
->리스트로 관리(레벨업, 사망, 클리어 등등)
->실행 어떻게?
struct
	string
	(audio file)
->string 값으로 실행하자

----------------------------------------------------------------
2차 개선해야할 점
1. LevelUpUI 생성 시 일정 확률로 index값이 정상적으로 출력이 안 됨 => 해결(300번 테스트해봄, 301번째가 에메랄드 광산이었다면...?)
2. LevelUpUI 생성 후 다시 레벨업 했을 때 레벨업 bgm이 출력 안 됨 => 해결